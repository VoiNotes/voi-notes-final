{"ast":null,"code":"import _classCallCheck from \"/home/devansh/Win/Devansh/Project/Web/voi-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devansh/Win/Devansh/Project/Web/voi-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devansh/Win/Devansh/Project/Web/voi-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devansh/Win/Devansh/Project/Web/voi-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devansh/Win/Devansh/Project/Web/voi-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devansh/Win/Devansh/Project/Web/voi-notes/src/Meeting.js\";\nimport React, { Component } from 'react';\nimport './Meeting.css';\nimport { ReactMic } from 'react-mic';\n\nvar Meeting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Meeting, _Component);\n\n  function Meeting(props) {\n    var _this;\n\n    _classCallCheck(this, Meeting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Meeting).call(this, props));\n\n    _this.startRecording = function () {\n      _this.setState({\n        record: true\n      });\n    };\n\n    _this.stopRecording = function () {\n      _this.setState({\n        record: false\n      });\n    };\n\n    _this.onStop = function (recordedBlob) {\n      console.log('recordedBlob is: ', recordedBlob.blobURL);\n\n      _this.setState({\n        blobURL: recordedBlob.blobURL\n      }); // console.log(typeof (recordedBlob));\n      // // var blob = new Blob(recordedBlob);\n      // // console.log(blob);\n      // // var audio = document.getElementById(\"audio\");\n      // // var file = new File([recordedBlob], \"temp\", {type: \"audio/webm\", lastModified: Date.now()});\n      // // console.log(file.type)\n      // // audio.src = window.URL.createObjectURL(recordedBlob);\n      // // audio.srcObject = recordedBlob;\n      // var link = document.createElement(\"a\"); // Or maybe get it from the current document\n      // link.href = recordedBlob.blobURL;\n      // link.download = \"temp.webm\";\n      // link.innerHTML = \"Click here to download the file\";\n      // document.body.appendChild(link);\n\n    };\n\n    _this.state = {\n      blobURL: null,\n      record: false\n    };\n    return _this;\n  }\n\n  _createClass(Meeting, [{\n    key: \"onData\",\n    value: function onData(recordedBlob) {\n      console.log('chunk of real-time data is: ', recordedBlob);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"meeting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"react-mic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(ReactMic, {\n        record: this.state.record,\n        className: \"sound-wave\",\n        onStop: this.onStop,\n        onData: this.onData,\n        strokeColor: \"#000000\",\n        backgroundColor: \"#FF4081\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"react-mic-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onTouchTap: this.startRecording,\n        onClick: this.startRecording,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onTouchTap: this.stopRecording,\n        onClick: this.stopRecording,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Stop\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        id: \"audio\",\n        controls: true,\n        src: this.state.blobURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Meeting;\n}(Component);\n\nexport default Meeting;","map":{"version":3,"sources":["/home/devansh/Win/Devansh/Project/Web/voi-notes/src/Meeting.js"],"names":["React","Component","ReactMic","Meeting","props","startRecording","setState","record","stopRecording","onStop","recordedBlob","console","log","blobURL","state","onData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;;IAEMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;;AADe,UASnBC,cATmB,GASF,YAAM;AACnB,YAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH,KAbkB;;AAAA,UAenBC,aAfmB,GAeH,YAAM;AAClB,YAAKF,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH,KAnBkB;;AAAA,UAyBnBE,MAzBmB,GAyBV,UAACC,YAAD,EAAkB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,YAAY,CAACG,OAA9C;;AACA,YAAKP,QAAL,CAAc;AACVO,QAAAA,OAAO,EAAEH,YAAY,CAACG;AADZ,OAAd,EAFuB,CAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,KA3CkB;;AAEf,UAAKC,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE,IADA;AAETN,MAAAA,MAAM,EAAE;AAFC,KAAb;AAFe;AAOlB;;;;2BAcMG,Y,EAAc;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,YAA5C;AACH;;;6BAsBQ;AACL,aACI;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAWP,MADvB;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,MAAM,EAAE,KAAKE,MAHjB;AAII,QAAA,MAAM,EAAE,KAAKM,MAJjB;AAKI,QAAA,WAAW,EAAC,SALhB;AAMI,QAAA,eAAe,EAAC,SANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAUI;AAAK,QAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAE,iBAAnB;AAAsC,QAAA,UAAU,EAAE,KAAKV,cAAvD;AAAuE,QAAA,OAAO,EAAE,KAAKA,cAArF;AAAqG,QAAA,IAAI,EAAC,QAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,QAAA,SAAS,EAAE,gBAAnB;AAAqC,QAAA,UAAU,EAAE,KAAKG,aAAtD;AAAqE,QAAA,OAAO,EAAE,KAAKA,aAAnF;AAAkG,QAAA,IAAI,EAAC,QAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAVJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,QAAQ,MAA1B;AAA2B,QAAA,GAAG,EAAE,KAAKM,KAAL,CAAWD,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CAdJ,CADJ,CADJ;AAoBH;;;;EApEiBZ,S;;AAuEtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Meeting.css';\nimport { ReactMic } from 'react-mic';\n\nclass Meeting extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            blobURL: null,\n            record: false\n        }\n\n    }\n\n    startRecording = () => {\n        this.setState({\n            record: true\n        });\n    }\n\n    stopRecording = () => {\n        this.setState({\n            record: false\n        });\n    }\n\n    onData(recordedBlob) {\n        console.log('chunk of real-time data is: ', recordedBlob);\n    }\n\n    onStop = (recordedBlob) => {\n        console.log('recordedBlob is: ', recordedBlob.blobURL);\n        this.setState({\n            blobURL: recordedBlob.blobURL\n        });\n        // console.log(typeof (recordedBlob));\n        // // var blob = new Blob(recordedBlob);\n        // // console.log(blob);\n        // // var audio = document.getElementById(\"audio\");\n        // // var file = new File([recordedBlob], \"temp\", {type: \"audio/webm\", lastModified: Date.now()});\n        // // console.log(file.type)\n        // // audio.src = window.URL.createObjectURL(recordedBlob);\n        // // audio.srcObject = recordedBlob;\n        // var link = document.createElement(\"a\"); // Or maybe get it from the current document\n        // link.href = recordedBlob.blobURL;\n        // link.download = \"temp.webm\";\n        // link.innerHTML = \"Click here to download the file\";\n        // document.body.appendChild(link);\n    }\n\n    render() {\n        return (\n            <div className={\"meeting\"}>\n                <div className={\"\"}>\n                    <div className={\"react-mic\"}>\n                        <ReactMic\n                            record={this.state.record}\n                            className=\"sound-wave\"\n                            onStop={this.onStop}\n                            onData={this.onData}\n                            strokeColor=\"#000000\"\n                            backgroundColor=\"#FF4081\" />\n                    </div>\n                    <div className={\"react-mic-control\"}>\n                        <button className={\"btn btn-success\"} onTouchTap={this.startRecording} onClick={this.startRecording} type=\"button\">Start</button>\n                        <button className={\"btn btn-danger\"} onTouchTap={this.stopRecording} onClick={this.stopRecording} type=\"button\">Stop</button>\n                    </div>\n                    <div><audio id=\"audio\" controls src={this.state.blobURL}></audio></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Meeting;"]},"metadata":{},"sourceType":"module"}